When would you want to use a remote repository rather than keeping all your work local?

  The remote repository is a good option for collaboration with other people, or
  for working with files acorss different computers. Maybe using a desktop at
  work and a laptop at home? Or vice-versa. The remote repository also allows
  you to share the code with people you might not know if you are building a new
  library for a programming language.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

  The remote repository might have collaborators working on it. If all the
  changes are always pulled automatically it might mess up the local files.
  Being able to have control over what files are moved from the remote to the
  local branch would prevent things from getting over-written accidentally.

Describe the differences between forks, clones, and branches. When would you use
one instead of another?

  A fork is creating a clone on the Git servers between someone elses files
  and your own GitHub account. The fork allows you to make changes to the file
  without affecting the original file while still giving the original author
  credit. A clone is copying a repository whether from one place to another on
  a local computer or between Github and a local computer. A branch is when you
  split off from the master branch of file's version history. This allows for
  a person to make changes and explore without 'breaking' the original file.

What is the benefit of having a copy of the last known state of the remote
stored locally?

  The local copy acts like a backup. Even though other changes might be added
  remotely, the local file acts as a link between the new files and the old
  files. This would make it easier to catch up the old version to the new
  version, or would allow the puller/fetcher to keep the new changes on a
  separate branch so as not to overwrite the original file with the new changes
  if that now represents a diverging point for the project.

How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

  In my experience, collaborating without using Git or GitHub has involved
  emailing documents back and forth, or using a Google Drive account that
  allows multiple users to make modifications to the same documents. These
  work OK for what I have had to do (write word documents), but they are
  severely lacking for coding projects. It would definitely be harder to keep
  track of the life of a project emailing the files back and forth. Using Google
  Drive is slightly better, but all users still wouldn't be able to see the
  past versions of the file. Of split the project into multiple branches. What
  is easier about the emailing method is that no one has to use any command
  line functions or do anything that even remotely seems like coding. The people
  I work with would not be able to handle that! 
